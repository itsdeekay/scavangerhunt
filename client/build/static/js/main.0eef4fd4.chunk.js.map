{"version":3,"sources":["constants/actionTypes.js","reducers/auth.js","reducers/index.js","reducers/alerts.js","reducers/branch.js","reducers/error.js","api/index.js","actions/branches.js","components/Login.js","actions/alerts.js","components/Home.js","components/Navbar.js","components/Notification.js","components/Notifications.js","App.js","index.js"],"names":["CREATE","UPDATE","FETCH_ALL","AUTH","LOGOUT","FETCH_BRANCHES","ERROR","authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","payload","clear","alerts","branches","appReducers","combineReducers","map","alert","_id","auth","branch","error","API","axios","create","baseURL","interceptors","request","use","req","getItem","headers","Authorization","parse","token","getAlertsByPin","pincodes","get","params","updateAlert","id","branchId","patch","signIn","formData","post","getBranches","pincode","signin","router","dispatch","a","api","data","console","log","push","Login","useState","branchName","password","login","setLogin","setError","useDispatch","history","useHistory","response","useSelector","useEffect","handleSubmit","e","preventDefault","className","onSubmit","onChange","target","value","getAlerts","message","createAlert","socket","newAlert","emit","Home","contactDetails","details","setDetails","hunt","setHunt","io","connect","transports","href","branchIncharge","address","city","contactNumber","Navbar","setBranch","location","useLocation","on","result","disconnect","to","filter","viewedBy","includes","length","unreadNotification","onClick","Notification","item","viewed","setViewed","moment","createdAt","format","Notifications","setAlerts","App","path","exact","component","store","createStore","undefined","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0eef4fd4.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const FETCH_BRANCHES = 'FETCH_BRANCHES';\r\nexport const ERROR = \"ERROR\"","import {AUTH,LOGOUT}  from '../constants/actionTypes';\r\n\r\nconst authReducer = (state = { authData: null }, action) => {\r\n  switch (action.type) {\r\n    case AUTH:\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.payload }));\r\n      return { ...state, authData: action.payload };\r\n    case LOGOUT:\r\n      localStorage.clear();\r\n      return {  authData: null,alerts:null,branches:null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\n\r\nimport alerts from './alerts';\r\nimport auth from './auth';\r\nimport branch from './branch';\r\nimport error from './error';\r\nconst appReducers = combineReducers({ alerts,auth,branch,error });\r\n\r\nexport const reducers = (state,action)=>{\r\n    if(action.type==='LOGOUT'){\r\n        return appReducers(undefined,action);\r\n    }\r\n    return appReducers(state,action);\r\n}\r\n","import { FETCH_ALL, CREATE, UPDATE} from '../constants/actionTypes';\r\n\r\nexport default (alerts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case CREATE:\r\n      return [...alerts, action.payload];\r\n    case UPDATE:\r\n      return alerts.map((alert) => (alert._id === action.payload._id ? action.payload : alert));\r\n    default:\r\n      return alerts;\r\n  }\r\n};","import { FETCH_BRANCHES} from '../constants/actionTypes';\r\n\r\nexport default (branches = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_BRANCHES:\r\n      return action.payload;\r\n    default:\r\n      return branches;\r\n  }\r\n};","import { ERROR} from '../constants/actionTypes';\r\n\r\nexport default (error = {}, action) => {\r\n  switch (action.type) {\r\n    case ERROR:\r\n      return action.payload;\r\n    default:\r\n      return error;\r\n  }\r\n};","import axios from 'axios';\r\nconst API = axios.create({ baseURL: 'https://scavangerhunt.herokuapp.com/' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n  }\r\n  return req;\r\n});\r\n\r\n\r\nexport const fetchAlerts = () => API.get('/alerts');\r\nexport const getAlertsByPin = (pincodes) => API.get('/alerts/match',{params:{pincodes}});\r\nexport const createAlert = (newAlert) => API.post('/alerts', newAlert);\r\nexport const updateAlert = (id, branchId) => API.patch(`/alerts/${id}`, {branchId});\r\n\r\nexport const signIn = (formData) => API.post('/branches/signin', formData);\r\nexport const getBranches = (formData) => API.get(`/branches/${formData.pincode}`);","import { AUTH,FETCH_BRANCHES,ERROR } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const signin = (formData,router) => async (dispatch) => {\r\n  try {\r\n    const {data} = await api.signIn(formData);\r\n    //console.log(data)\r\n    if(!data.error){\r\n      console.log(data)\r\n      dispatch({ type: AUTH,  payload: data });\r\n      router.push('/');\r\n    }else{\r\n      console.log('else',data)\r\n      dispatch({ type: ERROR,  payload: data });\r\n    }\r\n    //if(data.stat)\r\n    \r\n  } catch (error) {\r\n    console.log('Error')\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getBranches = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getBranches(formData);\r\n    dispatch({ type: FETCH_BRANCHES,  payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};","import React,{useState,useEffect} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { signin } from '../actions/branches';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n\r\n    const [login,setLogin] = useState({branchName:'',password:''})\r\n    const [error,setError] = useState(\"\")\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const response = useSelector((state)=>state.error.error?state.error.error : \"\")\r\n    useEffect(()=>{\r\n        if(response) setError(response)\r\n    },[response])\r\n    \r\n    const handleSubmit = async (e) =>{\r\n        setError('')\r\n        e.preventDefault();\r\n        if(login.branchName===\"\"){\r\n            setError(\"Please enter Branch name\")\r\n            return\r\n        }\r\n        if(login.password===\"\"){\r\n            setError(\"Please enter password\")\r\n            return\r\n        }\r\n        dispatch(signin(login,history));\r\n        \r\n    }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n        <h2 className=\"loginHeader\"> Login</h2>\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n                <label  className=\"form-label\">Branch</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"branchName\"\r\n                onChange = {(e)=>setLogin({...login,branchName:e.target.value})} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label  className=\"form-label\">Password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"password\"\r\n                onChange = {(e)=>setLogin({...login,password:e.target.value})} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n            <label>{error}</label>\r\n        </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import { FETCH_ALL, CREATE, UPDATE} from '../constants/actionTypes';\r\n\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getAlerts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchAlerts();\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nexport const getAlertsByPin = (pincodes) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.getAlertsByPin(pincodes);\r\n      dispatch({ type: FETCH_ALL, payload: data });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\nexport const createAlert = (alert,socket) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createAlert(alert);\r\n    socket.emit(\"newHunt\",data);\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n\r\nexport const updateAlert = (id,branchId) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateAlert(id,branchId);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n","import React,{useState,useEffect} from 'react';\r\nimport { getBranches } from '../actions/branches';\r\nimport { createAlert } from '../actions/alerts';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport io from 'socket.io-client';\r\n\r\nconst ENDPOINT = \"https://scavangerhunt.herokuapp.com/\"\r\n\r\nconst Home = () => {\r\n  const [details,setDetails] = useState({contactDetails:'',pincode:''})\r\n  const [hunt, setHunt] = useState([]);\r\n  const [error,setError] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const response = useSelector((state)=>state.branch);\r\n  const socket = io.connect(ENDPOINT,{ transports: ['websocket', 'polling', 'flashsocket'] });\r\n  useEffect(()=>{\r\n    if(response) {\r\n      setHunt(response)}\r\n  },[response])\r\n\r\n  const handleSubmit = async (e) =>{\r\n    setError('')\r\n    e.preventDefault();\r\n    if(details.contactDetails===\"\"){\r\n        setError(\"Please enter Contact Details\")\r\n        return\r\n    }\r\n    if(details.pincode===\"\"){\r\n        setError(\"Please enter Pincode\")\r\n        return\r\n    }\r\n\r\n    dispatch(getBranches(details));\r\n    dispatch(createAlert(details,socket));\r\n}\r\n    return (\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"login col-5\">\r\n          <h2 className=\"loginHeader\"> Go for Hunt...</h2>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Contact Details</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"contactDetails\"\r\n                onChange={(e) => setDetails({ ...details, contactDetails: e.target.value })} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Pincode</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"pincode\"\r\n                onChange={(e) => setDetails({ ...details, pincode: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Search</button>\r\n            <label>{error}</label>\r\n          </form>\r\n        </div>\r\n        <div className=\"col-1\"></div>\r\n        <ul className=\"list-group col-6\">\r\n        {hunt.map(branch => (\r\n            <li href=\"#\" className=\"list-group-item\" key={branch.branchName}>\r\n              <div>Branch Name : {branch.branchName}</div>\r\n              <div>Branch Incharge : {branch.branchIncharge}</div>\r\n              <div>Branch Address : {branch.address}, {branch.city}</div>\r\n              <div>Contact No. : {branch.contactNumber}</div>\r\n            </li>\r\n        ))}\r\n        </ul>\r\n        \r\n      </div>\r\n      \r\n    );\r\n  };\r\n\r\n  export default Home;","import React,{useEffect, useState} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { useHistory,Link,useLocation } from 'react-router-dom'\r\nimport {LOGOUT} from '../constants/actionTypes'\r\nimport { getAlertsByPin,getAlerts } from '../actions/alerts';\r\nimport io from 'socket.io-client';\r\n\r\nconst ENDPOINT = \"https://scavangerhunt.herokuapp.com/\"\r\nconst Navbar = () =>{\r\n    const [branch,setBranch] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const response = useSelector((state)=>state.alerts);\r\n    const socket = io.connect(ENDPOINT,{ transports: ['websocket', 'polling', 'flashsocket'] });\r\n    const logout = () => {\r\n        dispatch({type:LOGOUT});\r\n        history.push('/');\r\n        setBranch(null)\r\n    }\r\n    useEffect(()=>{\r\n        \r\n        socket.on(\"updateNotification\", data=>{\r\n            console.log('Notification Received')\r\n            if(branch?.result?.branchName==='Admin'){\r\n                dispatch(getAlerts())\r\n            }else if(branch?.result){\r\n                dispatch(getAlertsByPin(branch?.result?.pincodes))\r\n            }\r\n        });\r\n        return () => socket.disconnect();\r\n    },[])\r\n    useEffect(()=>{\r\n        if(branch?.result?.branchName==='Admin'){\r\n            dispatch(getAlerts())\r\n        }else if(branch?.result){\r\n            dispatch(getAlertsByPin(branch?.result?.pincodes))\r\n        }\r\n        \r\n    },[branch])\r\n    useEffect(()=>{\r\n        setBranch(JSON.parse(localStorage.getItem('profile')));\r\n    },[location]);\r\n\r\n    const unreadNotification = () =>{\r\n        if(branch?.result?._id){\r\n            return response.filter(e=> !e.viewedBy.includes(branch?.result?._id)).length;\r\n        }\r\n    }\r\n\r\n    return(\r\n            <div className=\"row navbar\">\r\n                <h2 className=\"col-9 heading\">\r\n                <Link to=\"/\">Scavanger Hunt</Link>\r\n                </h2>\r\n                <div className=\"col-3 user\">\r\n                    {branch?(\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"profile col-8\">\r\n                            <Link to=\"/notifications\">\r\n                            <span className=\"avatar\"></span>\r\n                            <span className=\"badge badge-light\">{unreadNotification()}</span>\r\n                            </Link>\r\n                            \r\n                            <span className=\"branchname\">{branch.result.branchName}</span>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                            <button onClick={logout} className=\"btn btn-primary btn-sm\">Logout</button>\r\n                            </div>\r\n                        </div>\r\n                    ):(<Link to=\"/login\" className=\"btn btn-primary btn-sm\">Login</Link>)}\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React,{useState} from 'react';\r\nimport { updateAlert } from '../actions/alerts';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment'\r\n\r\nconst Notification = ({item,branchId}) => {\r\n  const dispatch = useDispatch();\r\n  const [viewed,setViewed] = useState(item.viewedBy.includes(branchId))\r\n  const handleView = () =>{\r\n      if(!viewed){\r\n        dispatch(updateAlert(item._id,branchId));\r\n        setViewed(true);\r\n      }\r\n  }\r\n\r\n    return (\r\n      \r\n        <a  href=\"#\" className={`list-group-item ${ viewed ? \"viewed\" :\"notviewed\" }`}\r\n        \r\n        onClick={handleView}>\r\n         <div>Contact Details : {item.contactDetails}</div>\r\n         <div>Pincode: {item.pincode}</div>\r\n         <div className=\"timestamp\"> {moment(item.createdAt).format('lll')}</div>\r\n       </a>\r\n      \r\n    );\r\n  };\r\n\r\n  export default Notification;","import React,{useState,useEffect} from 'react';\r\nimport { getAlertsByPin,getAlerts } from '../actions/alerts';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport Notification from './Notification'\r\n\r\nconst Notifications = () => {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const response = useSelector((state)=>state.alerts);\r\n  const [branch,setBranch] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  useEffect(()=>{\r\n    if(response) {\r\n        setAlerts(response)}\r\n  },[response])\r\n  useEffect(()=>{\r\n    setBranch(JSON.parse(localStorage.getItem('profile')));\r\n    if(branch?.result?.branchName==='Admin'){\r\n      dispatch(getAlerts())\r\n  }else{\r\n      dispatch(getAlertsByPin(branch?.result?.pincodes))\r\n  }\r\n  },[])\r\n\r\n    return (\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"list-group\">\r\n        {alerts.map(alert => (\r\n            <Notification key={alert._id} item={alert} branchId = {branch.result?._id} />\r\n        ))}\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n    );\r\n  };\r\n\r\n  export default Notifications;","import React from 'react';\r\nimport Login from './components/Login';\r\nimport Home from './components/Home'\r\nimport Navbar from './components/Navbar'\r\nimport Notifications from './components/Notifications'\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\r\nconst App = () => {\r\n\r\n\r\n  return (\r\n    \r\n    <BrowserRouter>\r\n      \r\n      <Navbar />\r\n      <div className=\"container\">\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Route path=\"/notifications\" exact component={Notifications} />\r\n      </Switch>\r\n      </div>\r\n      \r\n    </BrowserRouter>\r\n    \r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { reducers } from './reducers';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}